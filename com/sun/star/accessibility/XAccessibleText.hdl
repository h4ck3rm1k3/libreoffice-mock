#ifndef INCLUDED_COM_SUN_STAR_ACCESSIBILITY_XACCESSIBLETEXT_HDL
#define INCLUDED_COM_SUN_STAR_ACCESSIBILITY_XACCESSIBLETEXT_HDL

#include "sal/config.h"

#include <exception>

#include "com/sun/star/accessibility/TextSegment.hdl"
#include "com/sun/star/awt/Point.hdl"
#include "com/sun/star/awt/Rectangle.hdl"
#include "com/sun/star/beans/PropertyValue.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/lang/IndexOutOfBoundsException.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace accessibility {

class SAL_NO_VTABLE XAccessibleText : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::sal_Int32 SAL_CALL getCaretPosition() /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Bool SAL_CALL setCaretPosition( ::sal_Int32 nIndex ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Unicode SAL_CALL getCharacter( ::sal_Int32 nIndex ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > SAL_CALL getCharacterAttributes( ::sal_Int32 nIndex, const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aRequestedAttributes ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::com::sun::star::awt::Rectangle SAL_CALL getCharacterBounds( ::sal_Int32 nIndex ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Int32 SAL_CALL getCharacterCount() /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Int32 SAL_CALL getIndexAtPoint( const ::com::sun::star::awt::Point& aPoint ) /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::rtl::OUString SAL_CALL getSelectedText() /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Int32 SAL_CALL getSelectionStart() /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Int32 SAL_CALL getSelectionEnd() /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Bool SAL_CALL setSelection( ::sal_Int32 nStartIndex, ::sal_Int32 nEndIndex ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::rtl::OUString SAL_CALL getText() /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::rtl::OUString SAL_CALL getTextRange( ::sal_Int32 nStartIndex, ::sal_Int32 nEndIndex ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::com::sun::star::accessibility::TextSegment SAL_CALL getTextAtIndex( ::sal_Int32 nIndex, ::sal_Int16 nTextType ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::com::sun::star::accessibility::TextSegment SAL_CALL getTextBeforeIndex( ::sal_Int32 nIndex, ::sal_Int16 nTextType ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::com::sun::star::accessibility::TextSegment SAL_CALL getTextBehindIndex( ::sal_Int32 nIndex, ::sal_Int16 nTextType ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::sal_Bool SAL_CALL copyText( ::sal_Int32 nStartIndex, ::sal_Int32 nEndIndex ) /* throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XAccessibleText() throw () {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::com::sun::star::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::com::sun::star::accessibility::XAccessibleText const *);
} } } }

inline ::com::sun::star::uno::Type const & SAL_CALL getCppuType(const ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessibleText > *) ;

#endif
