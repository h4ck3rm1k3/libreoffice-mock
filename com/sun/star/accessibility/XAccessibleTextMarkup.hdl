#ifndef INCLUDED_COM_SUN_STAR_ACCESSIBILITY_XACCESSIBLETEXTMARKUP_HDL
#define INCLUDED_COM_SUN_STAR_ACCESSIBILITY_XACCESSIBLETEXTMARKUP_HDL

#include "sal/config.h"

#include <exception>

#include "com/sun/star/accessibility/TextSegment.hdl"
#include "com/sun/star/accessibility/XAccessibleText.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/lang/IndexOutOfBoundsException.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace accessibility {

class SAL_NO_VTABLE XAccessibleTextMarkup : public ::css::accessibility::XAccessibleText
{
public:

    // Methods
    virtual ::sal_Int32 SAL_CALL getTextMarkupCount( ::sal_Int32 TextMarkupType ) /* throw (::css::lang::IllegalArgumentException, ::css::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::css::accessibility::TextSegment SAL_CALL getTextMarkup( ::sal_Int32 TextMarkupIndex, ::sal_Int32 TextMarkupType ) /* throw (::css::lang::IndexOutOfBoundsException, ::css::lang::IllegalArgumentException, ::css::uno::RuntimeException, ::std::exception) */ = 0;
    virtual ::css::uno::Sequence< ::css::accessibility::TextSegment > SAL_CALL getTextMarkupAtIndex( ::sal_Int32 CharIndex, ::sal_Int32 TextMarkupType ) /* throw (::css::lang::IndexOutOfBoundsException, ::css::lang::IllegalArgumentException, ::css::uno::RuntimeException, ::std::exception) */ = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XAccessibleTextMarkup() throw () {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::accessibility::XAccessibleTextMarkup const *);
} } } }

inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::accessibility::XAccessibleTextMarkup > *) SAL_THROW(());

#endif
