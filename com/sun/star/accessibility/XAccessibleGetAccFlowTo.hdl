#ifndef INCLUDED_COM_SUN_STAR_ACCESSIBILITY_XACCESSIBLEGETACCFLOWTO_HDL
#define INCLUDED_COM_SUN_STAR_ACCESSIBILITY_XACCESSIBLEGETACCFLOWTO_HDL

#include "sal/config.h"

#include <exception>

#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace accessibility {

class SAL_NO_VTABLE XAccessibleGetAccFlowTo : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any > SAL_CALL get_AccFlowTo( const ::com::sun::star::uno::Any& aXShape, ::sal_Int32 nType ) /* throw (::com::sun::star::uno::RuntimeException, ::std::exception) */ = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XAccessibleGetAccFlowTo() throw () {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::com::sun::star::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::com::sun::star::accessibility::XAccessibleGetAccFlowTo const *);
} } } }

inline ::com::sun::star::uno::Type const & SAL_CALL getCppuType(const ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessibleGetAccFlowTo > *) ;

#endif
