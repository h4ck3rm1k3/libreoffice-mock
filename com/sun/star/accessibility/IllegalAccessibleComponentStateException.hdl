#ifndef INCLUDED_COM_SUN_STAR_ACCESSIBILITY_ILLEGALACCESSIBLECOMPONENTSTATEEXCEPTION_HDL
#define INCLUDED_COM_SUN_STAR_ACCESSIBILITY_ILLEGALACCESSIBLECOMPONENTSTATEEXCEPTION_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Exception.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace accessibility {

class CPPU_GCC_DLLPUBLIC_EXPORT IllegalAccessibleComponentStateException : public ::css::uno::Exception
{
public:
    inline CPPU_GCC_DLLPRIVATE IllegalAccessibleComponentStateException() SAL_THROW(());

    inline CPPU_GCC_DLLPRIVATE IllegalAccessibleComponentStateException(const ::rtl::OUString& Message_, const ::css::uno::Reference< ::css::uno::XInterface >& Context_) SAL_THROW(());

    inline CPPU_GCC_DLLPRIVATE IllegalAccessibleComponentStateException(IllegalAccessibleComponentStateException const &);

    inline CPPU_GCC_DLLPRIVATE ~IllegalAccessibleComponentStateException();

    inline CPPU_GCC_DLLPRIVATE IllegalAccessibleComponentStateException & operator =(IllegalAccessibleComponentStateException const &);

};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::accessibility::IllegalAccessibleComponentStateException const *);
} } } }

inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::accessibility::IllegalAccessibleComponentStateException *) SAL_THROW(());

#endif
